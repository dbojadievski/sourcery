; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	C:\Users\dboja\Documents\Visual Studio 2015\Projects\sourcery\Sourcery\runme.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG6237	DB	'r', 00H, 'u', 00H, 'n', 00H, 'm', 00H, 'e', 00H, '.', 00H
	DB	'c', 00H, 00H, 00H
$SG6238	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '_', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e'
	DB	00H, '.', 00H, 'a', 00H, 'x', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	' ', 00H, '1', 00H, 00H, 00H
$SG6239	DB	'r', 00H, 'u', 00H, 'n', 00H, 'm', 00H, 'e', 00H, '.', 00H
	DB	'c', 00H, 00H, 00H
$SG6240	DB	'i', 00H, 's', 00H, '_', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG6241	DB	'r', 00H, 'u', 00H, 'n', 00H, 'm', 00H, 'e', 00H, '.', 00H
	DB	'c', 00H, 00H, 00H
$SG6242	DB	'f', 00H, 'l', 00H, 'a', 00H, 'g', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, '1', 00H, 00H, 00H
$SG6243	DB	'r', 00H, 'u', 00H, 'n', 00H, 'm', 00H, 'e', 00H, '.', 00H
	DB	'c', 00H, 00H, 00H
$SG6244	DB	'i', 00H, 's', 00H, '_', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG6279	DB	'r', 00H, 'u', 00H, 'n', 00H, 'm', 00H, 'e', 00H, '.', 00H
	DB	'c', 00H, 00H, 00H
$SG6280	DB	'm', 00H, 'a', 00H, 'i', 00H, 'n', 00H, '_', 00H, 's', 00H
	DB	't', 00H, 'i', 00H, 'c', 00H, 'k', 00H, '.', 00H, 'p', 00H, '_'
	DB	00H, 'c', 00H, 'h', 00H, 'i', 00H, 'p', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG6281	DB	'r', 00H, 'u', 00H, 'n', 00H, 'm', 00H, 'e', 00H, '.', 00H
	DB	'c', 00H, 00H, 00H
$SG6282	DB	'!', 00H, 'e', 00H, 'r', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG6283	DB	'r', 00H, 'u', 00H, 'n', 00H, 'm', 00H, 'e', 00H, '.', 00H
	DB	'c', 00H, 00H, 00H
$SG6284	DB	'm', 00H, 'e', 00H, 'm', 00H, '_', 00H, 'b', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '1'
	DB	00H, 00H, 00H
$SG6285	DB	'r', 00H, 'u', 00H, 'n', 00H, 'm', 00H, 'e', 00H, '.', 00H
	DB	'c', 00H, 00H, 00H
$SG6286	DB	'!', 00H, 'e', 00H, 'r', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG6287	DB	'r', 00H, 'u', 00H, 'n', 00H, 'm', 00H, 'e', 00H, '.', 00H
	DB	'c', 00H, 00H, 00H
$SG6288	DB	'!', 00H, 'e', 00H, 'r', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG6289	DB	'r', 00H, 'u', 00H, 'n', 00H, 'm', 00H, 'e', 00H, '.', 00H
	DB	'c', 00H, 00H, 00H
$SG6290	DB	'm', 00H, 'e', 00H, 'm', 00H, '_', 00H, 'b', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, '_', 00H, '2', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, '1', 00H, 00H, 00H
$SG6291	DB	'r', 00H, 'u', 00H, 'n', 00H, 'm', 00H, 'e', 00H, '.', 00H
	DB	'c', 00H, 00H, 00H
$SG6292	DB	'!', 00H, 'e', 00H, 'r', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG6293	DB	'r', 00H, 'u', 00H, 'n', 00H, 'm', 00H, 'e', 00H, '.', 00H
	DB	'c', 00H, 00H, 00H
$SG6294	DB	'!', 00H, 'e', 00H, 'r', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG6295	DB	'r', 00H, 'u', 00H, 'n', 00H, 'm', 00H, 'e', 00H, '.', 00H
	DB	'c', 00H, 00H, 00H
$SG6296	DB	'm', 00H, 'e', 00H, 'm', 00H, '_', 00H, 'b', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, '_', 00H, '3', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 'x', 00H, 'D', 00H, 'E', 00H, 'A', 00H
	DB	'D', 00H, 'C', 00H, '0', 00H, 'D', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG6297	DB	'r', 00H, 'u', 00H, 'n', 00H, 'm', 00H, 'e', 00H, '.', 00H
	DB	'c', 00H, 00H, 00H
$SG6298	DB	'!', 00H, 'e', 00H, 'r', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG6299	DB	'r', 00H, 'u', 00H, 'n', 00H, 'm', 00H, 'e', 00H, '.', 00H
	DB	'c', 00H, 00H, 00H
$SG6300	DB	'!', 00H, 'e', 00H, 'r', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG6301	DB	'r', 00H, 'u', 00H, 'n', 00H, 'm', 00H, 'e', 00H, '.', 00H
	DB	'c', 00H, 00H, 00H
$SG6302	DB	'm', 00H, 'e', 00H, 'm', 00H, '_', 00H, 'b', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, '_', 00H, '4', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 'x', 00H, 'D', 00H, 'E', 00H, 'A', 00H
	DB	'D', 00H, 'C', 00H, '0', 00H, 'D', 00H, 'E', 00H, 00H, 00H
_DATA	ENDS
PUBLIC	_test_bios_memory
PUBLIC	_test_register_file_initialization
PUBLIC	_main
EXTRN	_memory_set:PROC
EXTRN	_flags_retrieve_byte:PROC
EXTRN	_flags_retrieve_word:PROC
EXTRN	_flags_set_byte:PROC
EXTRN	__wassert:PROC
EXTRN	_registers_add_value:PROC
EXTRN	_registers_initialize:PROC
EXTRN	_registers_flags_carry_set:PROC
EXTRN	_memory_stick_initialize:PROC
EXTRN	_bios_memory_read:PROC
EXTRN	_bios_memory_write:PROC
EXTRN	_malloc:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_main	PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\runme.c
; Line 13
	push	ebp
	mov	ebp, esp
; Line 20
	call	_test_bios_memory
; Line 21
	call	_test_register_file_initialization
; Line 23
	xor	eax, eax
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_register_file$ = -56					; size = 48
_p_buffer$ = -8						; size = 4
_val_false$ = -4					; size = 1
_val_true$ = -3						; size = 1
_is_set$ = -2						; size = 1
_flag$ = -1						; size = 1
_test_register_file_initialization PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\runme.c
; Line 27
	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
; Line 28
	push	512					; 00000200H
	call	_malloc
	add	esp, 4
	mov	DWORD PTR _p_buffer$[ebp], eax
; Line 29
	push	512					; 00000200H
	push	0
	mov	eax, DWORD PTR _p_buffer$[ebp]
	push	eax
	call	_memory_set
	add	esp, 12					; 0000000cH
; Line 32
	lea	ecx, DWORD PTR _register_file$[ebp]
	push	ecx
	call	_registers_initialize
	add	esp, 4
; Line 33
	push	1
	push	1
	lea	edx, DWORD PTR _register_file$[ebp]
	push	edx
	call	_registers_add_value
	add	esp, 12					; 0000000cH
; Line 34
	movzx	eax, WORD PTR _register_file$[ebp]
	cmp	eax, 1
	je	SHORT $LN3@test_regis
	push	34					; 00000022H
	push	OFFSET $SG6237
	push	OFFSET $SG6238
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@test_regis:
; Line 36
	mov	BYTE PTR _val_true$[ebp], 1
; Line 37
	mov	BYTE PTR _val_false$[ebp], 0
; Line 39
	mov	BYTE PTR _flag$[ebp], 5
; Line 40
	push	1
	movzx	edx, BYTE PTR _flag$[ebp]
	push	edx
	call	_flags_retrieve_byte
	add	esp, 8
	mov	BYTE PTR _is_set$[ebp], al
; Line 41
	movzx	eax, BYTE PTR _is_set$[ebp]
	test	eax, eax
	jne	SHORT $LN4@test_regis
	push	41					; 00000029H
	push	OFFSET $SG6239
	push	OFFSET $SG6240
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@test_regis:
; Line 43
	mov	BYTE PTR _flag$[ebp], 0
; Line 44
	push	0
	lea	edx, DWORD PTR _flag$[ebp]
	push	edx
	call	_flags_set_byte
	add	esp, 8
; Line 45
	movzx	eax, BYTE PTR _flag$[ebp]
	cmp	eax, 1
	je	SHORT $LN5@test_regis
	push	45					; 0000002dH
	push	OFFSET $SG6241
	push	OFFSET $SG6242
	call	__wassert
	add	esp, 12					; 0000000cH
$LN5@test_regis:
; Line 47
	lea	edx, DWORD PTR _register_file$[ebp]
	push	edx
	call	_registers_flags_carry_set
	add	esp, 4
; Line 48
	push	0
	movzx	eax, WORD PTR _register_file$[ebp+46]
	push	eax
	call	_flags_retrieve_word
	add	esp, 8
	mov	BYTE PTR _is_set$[ebp], al
; Line 49
	movzx	ecx, BYTE PTR _is_set$[ebp]
	test	ecx, ecx
	jne	SHORT $LN1@test_regis
	push	49					; 00000031H
	push	OFFSET $SG6243
	push	OFFSET $SG6244
	call	__wassert
	add	esp, 12					; 0000000cH
$LN1@test_regis:
; Line 50
	mov	esp, ebp
	pop	ebp
	ret	0
_test_register_file_initialization ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_main_stick$ = -36					; size = 8
_mem_buff_4$ = -28					; size = 4
_last_addr_at_first_chip$ = -24				; size = 4
_mem_buff_3$ = -20					; size = 4
_addr_to_read$ = -16					; size = 4
_mem_buff_2$ = -12					; size = 4
_mem_buff$ = -8						; size = 4
_err$ = -4						; size = 4
_test_bios_memory PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\runme.c
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
; Line 56
	push	4
	lea	eax, DWORD PTR _main_stick$[ebp]
	push	eax
	call	_memory_stick_initialize
	add	esp, 8
; Line 57
	cmp	DWORD PTR _main_stick$[ebp+4], 0
	jne	SHORT $LN3@test_bios_
	push	57					; 00000039H
	push	OFFSET $SG6279
	push	OFFSET $SG6280
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@test_bios_:
; Line 59
	push	1
	push	0
	lea	edx, DWORD PTR _main_stick$[ebp]
	push	edx
	call	_bios_memory_write
	add	esp, 12					; 0000000cH
; Line 62
	mov	DWORD PTR _mem_buff$[ebp], -559038242	; deadc0deH
; Line 63
	lea	eax, DWORD PTR _mem_buff$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _main_stick$[ebp]
	push	ecx
	call	_bios_memory_read
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _err$[ebp], eax
; Line 64
	cmp	DWORD PTR _err$[ebp], 0
	je	SHORT $LN4@test_bios_
	push	64					; 00000040H
	push	OFFSET $SG6281
	push	OFFSET $SG6282
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@test_bios_:
; Line 65
	cmp	DWORD PTR _mem_buff$[ebp], 1
	je	SHORT $LN5@test_bios_
	push	65					; 00000041H
	push	OFFSET $SG6283
	push	OFFSET $SG6284
	call	__wassert
	add	esp, 12					; 0000000cH
$LN5@test_bios_:
; Line 67
	mov	DWORD PTR _mem_buff_2$[ebp], -559038242	; deadc0deH
; Line 68
	push	1
	push	16					; 00000010H
	lea	ecx, DWORD PTR _main_stick$[ebp]
	push	ecx
	call	_bios_memory_write
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _err$[ebp], eax
; Line 69
	cmp	DWORD PTR _err$[ebp], 0
	je	SHORT $LN6@test_bios_
	push	69					; 00000045H
	push	OFFSET $SG6285
	push	OFFSET $SG6286
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@test_bios_:
; Line 70
	lea	eax, DWORD PTR _mem_buff_2$[ebp]
	push	eax
	push	16					; 00000010H
	lea	ecx, DWORD PTR _main_stick$[ebp]
	push	ecx
	call	_bios_memory_read
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _err$[ebp], eax
; Line 71
	cmp	DWORD PTR _err$[ebp], 0
	je	SHORT $LN7@test_bios_
	push	71					; 00000047H
	push	OFFSET $SG6287
	push	OFFSET $SG6288
	call	__wassert
	add	esp, 12					; 0000000cH
$LN7@test_bios_:
; Line 72
	cmp	DWORD PTR _mem_buff_2$[ebp], 1
	je	SHORT $LN8@test_bios_
	push	72					; 00000048H
	push	OFFSET $SG6289
	push	OFFSET $SG6290
	call	__wassert
	add	esp, 12					; 0000000cH
$LN8@test_bios_:
; Line 74
	mov	DWORD PTR _mem_buff_3$[ebp], 0
; Line 75
	mov	DWORD PTR _addr_to_read$[ebp], 1025	; 00000401H
; Line 76
	push	-559038242				; deadc0deH
	mov	ecx, DWORD PTR _addr_to_read$[ebp]
	push	ecx
	lea	edx, DWORD PTR _main_stick$[ebp]
	push	edx
	call	_bios_memory_write
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _err$[ebp], eax
; Line 77
	cmp	DWORD PTR _err$[ebp], 0
	je	SHORT $LN9@test_bios_
	push	77					; 0000004dH
	push	OFFSET $SG6291
	push	OFFSET $SG6292
	call	__wassert
	add	esp, 12					; 0000000cH
$LN9@test_bios_:
; Line 78
	lea	ecx, DWORD PTR _mem_buff_3$[ebp]
	push	ecx
	mov	edx, DWORD PTR _addr_to_read$[ebp]
	push	edx
	lea	eax, DWORD PTR _main_stick$[ebp]
	push	eax
	call	_bios_memory_read
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _err$[ebp], eax
; Line 79
	cmp	DWORD PTR _err$[ebp], 0
	je	SHORT $LN10@test_bios_
	push	79					; 0000004fH
	push	OFFSET $SG6293
	push	OFFSET $SG6294
	call	__wassert
	add	esp, 12					; 0000000cH
$LN10@test_bios_:
; Line 80
	cmp	DWORD PTR _mem_buff_3$[ebp], -559038242	; deadc0deH
	je	SHORT $LN11@test_bios_
	push	80					; 00000050H
	push	OFFSET $SG6295
	push	OFFSET $SG6296
	call	__wassert
	add	esp, 12					; 0000000cH
$LN11@test_bios_:
; Line 83
	mov	DWORD PTR _mem_buff_4$[ebp], 0
; Line 84
	mov	DWORD PTR _last_addr_at_first_chip$[ebp], 1022 ; 000003feH
; Line 85
	push	-559038242				; deadc0deH
	mov	eax, DWORD PTR _last_addr_at_first_chip$[ebp]
	push	eax
	lea	ecx, DWORD PTR _main_stick$[ebp]
	push	ecx
	call	_bios_memory_write
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _err$[ebp], eax
; Line 86
	cmp	DWORD PTR _err$[ebp], 0
	je	SHORT $LN12@test_bios_
	push	86					; 00000056H
	push	OFFSET $SG6297
	push	OFFSET $SG6298
	call	__wassert
	add	esp, 12					; 0000000cH
$LN12@test_bios_:
; Line 87
	lea	eax, DWORD PTR _mem_buff_4$[ebp]
	push	eax
	mov	ecx, DWORD PTR _last_addr_at_first_chip$[ebp]
	push	ecx
	lea	edx, DWORD PTR _main_stick$[ebp]
	push	edx
	call	_bios_memory_read
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _err$[ebp], eax
; Line 88
	cmp	DWORD PTR _err$[ebp], 0
	je	SHORT $LN13@test_bios_
	push	88					; 00000058H
	push	OFFSET $SG6299
	push	OFFSET $SG6300
	call	__wassert
	add	esp, 12					; 0000000cH
$LN13@test_bios_:
; Line 89
	cmp	DWORD PTR _mem_buff_4$[ebp], -559038242	; deadc0deH
	je	SHORT $LN1@test_bios_
	push	89					; 00000059H
	push	OFFSET $SG6301
	push	OFFSET $SG6302
	call	__wassert
	add	esp, 12					; 0000000cH
$LN1@test_bios_:
; Line 90
	mov	esp, ebp
	pop	ebp
	ret	0
_test_bios_memory ENDP
_TEXT	ENDS
END
