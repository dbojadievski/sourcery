; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	C:\Users\dboja\Documents\Visual Studio 2015\Projects\sourcery\Sourcery\memory_stick.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG2993	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'_', 00H, 's', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'k', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG2994	DB	'p', 00H, '_', 00H, 'm', 00H, 'e', 00H, 'm', 00H, '_', 00H
	DB	's', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'k', 00H, 00H, 00H
$SG3008	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'_', 00H, 's', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'k', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG3009	DB	'p', 00H, '_', 00H, 'm', 00H, 'e', 00H, 'm', 00H, '_', 00H
	DB	's', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'k', 00H, 00H, 00H
_DATA	ENDS
PUBLIC	_memory_stick_initialize
PUBLIC	_memory_stick_free
EXTRN	_free:PROC
EXTRN	_malloc:PROC
EXTRN	__wassert:PROC
EXTRN	_memory_chip_initialize:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_curr_chip_idx$1 = -4					; size = 4
_p_mem_stick$ = 8					; size = 4
_memory_stick_free PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\memory_stick.c
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 46
	cmp	DWORD PTR _p_mem_stick$[ebp], 0
	jne	SHORT $LN6@memory_sti
	push	46					; 0000002eH
	push	OFFSET $SG3008
	push	OFFSET $SG3009
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@memory_sti:
; Line 47
	mov	DWORD PTR _curr_chip_idx$1[ebp], 0
	jmp	SHORT $LN4@memory_sti
$LN2@memory_sti:
	mov	ecx, DWORD PTR _p_mem_stick$[ebp]
	add	ecx, 8
	mov	DWORD PTR _p_mem_stick$[ebp], ecx
$LN4@memory_sti:
	mov	edx, DWORD PTR _p_mem_stick$[ebp]
	movzx	eax, BYTE PTR [edx]
	cmp	DWORD PTR _curr_chip_idx$1[ebp], eax
	jae	SHORT $LN1@memory_sti
; Line 48
	mov	ecx, DWORD PTR _p_mem_stick$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _curr_chip_idx$1[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_free
	add	esp, 4
	jmp	SHORT $LN2@memory_sti
$LN1@memory_sti:
; Line 49
	mov	esp, ebp
	pop	ebp
	ret	0
_memory_stick_free ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p_curr_chip$1 = -12					; size = 4
_err_code$ = -8						; size = 4
_curr_chip_idx$2 = -1					; size = 1
_p_mem_stick$ = 8					; size = 4
_num_chips$ = 12					; size = 1
_memory_stick_initialize PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\memory_stick.c
; Line 11
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 12
	cmp	DWORD PTR _p_mem_stick$[ebp], 0
	jne	SHORT $LN10@memory_sti
	push	12					; 0000000cH
	push	OFFSET $SG2993
	push	OFFSET $SG2994
	call	__wassert
	add	esp, 12					; 0000000cH
$LN10@memory_sti:
; Line 13
	mov	DWORD PTR _err_code$[ebp], 0
; Line 15
	movzx	ecx, BYTE PTR _num_chips$[ebp]
	shl	ecx, 4
	push	ecx
	call	_malloc
	add	esp, 4
	mov	edx, DWORD PTR _p_mem_stick$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 16
	mov	eax, DWORD PTR _p_mem_stick$[ebp]
	mov	cl, BYTE PTR _num_chips$[ebp]
	mov	BYTE PTR [eax], cl
; Line 17
	mov	BYTE PTR _curr_chip_idx$2[ebp], 0
	jmp	SHORT $LN4@memory_sti
$LN2@memory_sti:
	mov	dl, BYTE PTR _curr_chip_idx$2[ebp]
	add	dl, 1
	mov	BYTE PTR _curr_chip_idx$2[ebp], dl
$LN4@memory_sti:
	movzx	eax, BYTE PTR _curr_chip_idx$2[ebp]
	movzx	ecx, BYTE PTR _num_chips$[ebp]
	cmp	eax, ecx
	jge	SHORT $LN1@memory_sti
; Line 20
	push	16					; 00000010H
	call	_malloc
	add	esp, 4
	mov	DWORD PTR _p_curr_chip$1[ebp], eax
; Line 21
	cmp	DWORD PTR _p_curr_chip$1[ebp], 0
	je	SHORT $LN5@memory_sti
; Line 23
	push	256					; 00000100H
	push	4
	push	10000					; 00002710H
	mov	edx, DWORD PTR _p_curr_chip$1[ebp]
	push	edx
	call	_memory_chip_initialize
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN7@memory_sti
; Line 25
	mov	eax, DWORD PTR _err_code$[ebp]
	or	eax, 1
	mov	DWORD PTR _err_code$[ebp], eax
; Line 26
	jmp	SHORT $LN1@memory_sti
; Line 27
	jmp	SHORT $LN8@memory_sti
$LN7@memory_sti:
; Line 31
	movzx	ecx, BYTE PTR _curr_chip_idx$2[ebp]
	mov	edx, DWORD PTR _p_mem_stick$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	edx, DWORD PTR _p_curr_chip$1[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
$LN8@memory_sti:
; Line 33
	jmp	SHORT $LN6@memory_sti
$LN5@memory_sti:
; Line 36
	mov	eax, DWORD PTR _err_code$[ebp]
	or	eax, 1
	mov	DWORD PTR _err_code$[ebp], eax
; Line 37
	jmp	SHORT $LN1@memory_sti
$LN6@memory_sti:
; Line 39
	jmp	SHORT $LN2@memory_sti
$LN1@memory_sti:
; Line 41
	mov	esp, ebp
	pop	ebp
	ret	0
_memory_stick_initialize ENDP
_TEXT	ENDS
END
