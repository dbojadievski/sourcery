; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	C:\Users\dboja\Documents\Visual Studio 2015\Projects\sourcery\Sourcery\memory_routines.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG5591	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'_', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG5592	DB	'p', 00H, '_', 00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'r', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG5605	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'_', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG5606	DB	'p', 00H, '_', 00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'r', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG5616	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'_', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG5617	DB	'p', 00H, '_', 00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'r', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG5631	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'_', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG5632	DB	'p', 00H, '_', 00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'r', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG5633	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'_', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG5634	DB	's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG5645	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'_', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG5646	DB	'p', 00H, 'o', 00H, 's', 00H, ' ', 00H, '>', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 's', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H
	DB	'7', 00H, 00H, 00H
	ORG $+2
$SG5657	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'_', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG5658	DB	'p', 00H, 'o', 00H, 's', 00H, ' ', 00H, '>', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 's', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H
	DB	'1', 00H, '5', 00H, 00H, 00H
$SG5668	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'_', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG5669	DB	'p', 00H, 'o', 00H, 's', 00H, ' ', 00H, '>', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 's', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H
	DB	'7', 00H, 00H, 00H
	ORG $+2
$SG5679	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'_', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG5680	DB	'p', 00H, 'o', 00H, 's', 00H, ' ', 00H, '>', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 's', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H
	DB	'1', 00H, '5', 00H, 00H, 00H
$SG5701	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'_', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG5702	DB	'p', 00H, '_', 00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'r', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG5703	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'_', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG5704	DB	's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG5705	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'_', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG5706	DB	'p', 00H, '_', 00H, 'c', 00H, 'u', 00H, 'r', 00H, 'r', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'p', 00H, '_', 00H, 'm'
	DB	00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG5729	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'_', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG5730	DB	'p', 00H, '_', 00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'r', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG5731	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'_', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG5732	DB	'p', 00H, '_', 00H, 's', 00H, 'e', 00H, 't', 00H, '_', 00H
	DB	't', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG5733	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'_', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG5734	DB	's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H
_DATA	ENDS
PUBLIC	_memory_get_byte
PUBLIC	_memory_set_byte
PUBLIC	_least_significant_byte
PUBLIC	_most_significant_byte
PUBLIC	_flags_retrieve_byte
PUBLIC	_flags_retrieve_word
PUBLIC	_flags_set_byte
PUBLIC	_flags_set_word
PUBLIC	_memory_set
PUBLIC	_memory_set_buffer
PUBLIC	__real@4000000000000000
EXTRN	__wassert:PROC
EXTRN	_pow:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p_buff_set_to$ = -12					; size = 4
_p_buff_to_set$ = -8					; size = 4
_curr_byte_idx$1 = -4					; size = 4
_p_memory$ = 8						; size = 4
_p_set_to$ = 12						; size = 4
_size$ = 16						; size = 4
_memory_set_buffer PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\memory_routines.c
; Line 108
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 109
	cmp	DWORD PTR _p_memory$[ebp], 0
	jne	SHORT $LN6@memory_set
	push	109					; 0000006dH
	push	OFFSET $SG5729
	push	OFFSET $SG5730
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@memory_set:
; Line 110
	cmp	DWORD PTR _p_set_to$[ebp], 0
	jne	SHORT $LN7@memory_set
	push	110					; 0000006eH
	push	OFFSET $SG5731
	push	OFFSET $SG5732
	call	__wassert
	add	esp, 12					; 0000000cH
$LN7@memory_set:
; Line 111
	cmp	DWORD PTR _size$[ebp], 0
	jne	SHORT $LN8@memory_set
	push	111					; 0000006fH
	push	OFFSET $SG5733
	push	OFFSET $SG5734
	call	__wassert
	add	esp, 12					; 0000000cH
$LN8@memory_set:
; Line 113
	mov	eax, DWORD PTR _p_memory$[ebp]
	mov	DWORD PTR _p_buff_to_set$[ebp], eax
; Line 114
	mov	ecx, DWORD PTR _p_set_to$[ebp]
	mov	DWORD PTR _p_buff_set_to$[ebp], ecx
; Line 116
	mov	DWORD PTR _curr_byte_idx$1[ebp], 0
	jmp	SHORT $LN4@memory_set
$LN2@memory_set:
	mov	edx, DWORD PTR _curr_byte_idx$1[ebp]
	add	edx, 1
	mov	DWORD PTR _curr_byte_idx$1[ebp], edx
$LN4@memory_set:
	mov	eax, DWORD PTR _curr_byte_idx$1[ebp]
	cmp	eax, DWORD PTR _size$[ebp]
	jae	SHORT $LN1@memory_set
; Line 118
	mov	ecx, DWORD PTR _p_buff_to_set$[ebp]
	add	ecx, DWORD PTR _curr_byte_idx$1[ebp]
	mov	edx, DWORD PTR _p_buff_set_to$[ebp]
	add	edx, DWORD PTR _curr_byte_idx$1[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR [ecx], al
; Line 119
	jmp	SHORT $LN2@memory_set
$LN1@memory_set:
; Line 120
	mov	esp, ebp
	pop	ebp
	ret	0
_memory_set_buffer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p_last$ = -8						; size = 4
_p_curr$ = -4						; size = 4
_p_memory$ = 8						; size = 4
_value$ = 12						; size = 1
_size$ = 16						; size = 4
_memory_set PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\memory_routines.c
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 92
	cmp	DWORD PTR _p_memory$[ebp], 0
	jne	SHORT $LN5@memory_set
	push	92					; 0000005cH
	push	OFFSET $SG5701
	push	OFFSET $SG5702
	call	__wassert
	add	esp, 12					; 0000000cH
$LN5@memory_set:
; Line 93
	cmp	DWORD PTR _size$[ebp], 0
	jne	SHORT $LN6@memory_set
	push	93					; 0000005dH
	push	OFFSET $SG5703
	push	OFFSET $SG5704
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@memory_set:
; Line 95
	mov	edx, DWORD PTR _p_memory$[ebp]
	mov	DWORD PTR _p_curr$[ebp], edx
; Line 96
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p_memory$[ebp]
	push	ecx
	call	_most_significant_byte
	add	esp, 8
	mov	DWORD PTR _p_last$[ebp], eax
; Line 97
	mov	edx, DWORD PTR _p_curr$[ebp]
	cmp	edx, DWORD PTR _p_memory$[ebp]
	je	SHORT $LN2@memory_set
	push	97					; 00000061H
	push	OFFSET $SG5705
	push	OFFSET $SG5706
	call	__wassert
	add	esp, 12					; 0000000cH
$LN2@memory_set:
; Line 99
	mov	ecx, DWORD PTR _p_curr$[ebp]
	cmp	ecx, DWORD PTR _p_last$[ebp]
	ja	SHORT $LN1@memory_set
; Line 101
	mov	edx, DWORD PTR _p_curr$[ebp]
	mov	al, BYTE PTR _value$[ebp]
	mov	BYTE PTR [edx], al
; Line 102
	mov	ecx, DWORD PTR _p_curr$[ebp]
	add	ecx, 1
	mov	DWORD PTR _p_curr$[ebp], ecx
; Line 103
	jmp	SHORT $LN2@memory_set
$LN1@memory_set:
; Line 104
	mov	esp, ebp
	pop	ebp
	ret	0
_memory_set ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv93 = -16						; size = 4
tv91 = -12						; size = 4
_to_mul$ = -8						; size = 2
tv88 = -2						; size = 2
_p_flag$ = 8						; size = 4
_pos$ = 12						; size = 1
_flags_set_word PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\memory_routines.c
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 84
	movzx	eax, BYTE PTR _pos$[ebp]
	test	eax, eax
	jl	SHORT $LN3@flags_set_
	movzx	ecx, BYTE PTR _pos$[ebp]
	cmp	ecx, 15					; 0000000fH
	jle	SHORT $LN4@flags_set_
$LN3@flags_set_:
	push	84					; 00000054H
	push	OFFSET $SG5679
	push	OFFSET $SG5680
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@flags_set_:
; Line 85
	movzx	eax, BYTE PTR _pos$[ebp]
	cvtsi2sd xmm0, eax
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@4000000000000000
	movsd	QWORD PTR [esp], xmm0
	call	_pow
	add	esp, 16					; 00000010H
	fnstcw	WORD PTR tv88[ebp]
	movzx	eax, WORD PTR tv88[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv91[ebp], eax
	fldcw	WORD PTR tv91[ebp]
	fistp	DWORD PTR tv93[ebp]
	fldcw	WORD PTR tv88[ebp]
	mov	cx, WORD PTR tv93[ebp]
	mov	WORD PTR _to_mul$[ebp], cx
; Line 86
	mov	edx, DWORD PTR _p_flag$[ebp]
	movzx	eax, WORD PTR [edx]
	movzx	ecx, WORD PTR _to_mul$[ebp]
	or	eax, ecx
	mov	edx, DWORD PTR _p_flag$[ebp]
	mov	WORD PTR [edx], ax
; Line 87
	mov	esp, ebp
	pop	ebp
	ret	0
_flags_set_word ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv93 = -12						; size = 4
tv91 = -8						; size = 4
tv88 = -4						; size = 2
_to_mul$ = -1						; size = 1
_p_flag$ = 8						; size = 4
_pos$ = 12						; size = 1
_flags_set_byte PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\memory_routines.c
; Line 75
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 76
	movzx	eax, BYTE PTR _pos$[ebp]
	test	eax, eax
	jl	SHORT $LN3@flags_set_
	movzx	ecx, BYTE PTR _pos$[ebp]
	cmp	ecx, 7
	jle	SHORT $LN4@flags_set_
$LN3@flags_set_:
	push	76					; 0000004cH
	push	OFFSET $SG5668
	push	OFFSET $SG5669
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@flags_set_:
; Line 77
	movzx	eax, BYTE PTR _pos$[ebp]
	cvtsi2sd xmm0, eax
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@4000000000000000
	movsd	QWORD PTR [esp], xmm0
	call	_pow
	add	esp, 16					; 00000010H
	fnstcw	WORD PTR tv88[ebp]
	movzx	eax, WORD PTR tv88[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv91[ebp], eax
	fldcw	WORD PTR tv91[ebp]
	fistp	DWORD PTR tv93[ebp]
	fldcw	WORD PTR tv88[ebp]
	mov	cl, BYTE PTR tv93[ebp]
	mov	BYTE PTR _to_mul$[ebp], cl
; Line 78
	mov	edx, DWORD PTR _p_flag$[ebp]
	movzx	eax, BYTE PTR [edx]
	movzx	ecx, BYTE PTR _to_mul$[ebp]
	or	eax, ecx
	mov	edx, DWORD PTR _p_flag$[ebp]
	mov	BYTE PTR [edx], al
; Line 79
	mov	esp, ebp
	pop	ebp
	ret	0
_flags_set_byte ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv76 = -8						; size = 4
_to_or$ = -2						; size = 1
_value$ = -1						; size = 1
_p_flags$ = 8						; size = 2
_pos$ = 12						; size = 1
_flags_retrieve_word PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\memory_routines.c
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 65
	movzx	eax, BYTE PTR _pos$[ebp]
	test	eax, eax
	jl	SHORT $LN3@flags_retr
	movzx	ecx, BYTE PTR _pos$[ebp]
	cmp	ecx, 15					; 0000000fH
	jle	SHORT $LN4@flags_retr
$LN3@flags_retr:
	push	65					; 00000041H
	push	OFFSET $SG5657
	push	OFFSET $SG5658
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@flags_retr:
; Line 66
	mov	BYTE PTR _value$[ebp], 0
; Line 68
	mov	al, BYTE PTR _pos$[ebp]
	mov	BYTE PTR _to_or$[ebp], al
; Line 69
	movzx	ecx, WORD PTR _p_flags$[ebp]
	movzx	edx, BYTE PTR _to_or$[ebp]
	or	ecx, edx
	je	SHORT $LN5@flags_retr
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN6@flags_retr
$LN5@flags_retr:
	mov	DWORD PTR tv76[ebp], 0
$LN6@flags_retr:
	mov	al, BYTE PTR tv76[ebp]
	mov	BYTE PTR _value$[ebp], al
; Line 70
	mov	al, BYTE PTR _value$[ebp]
; Line 71
	mov	esp, ebp
	pop	ebp
	ret	0
_flags_retrieve_word ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv76 = -8						; size = 4
_to_or$ = -2						; size = 1
_value$ = -1						; size = 1
_p_flag$ = 8						; size = 1
_pos$ = 12						; size = 1
_flags_retrieve_byte PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\memory_routines.c
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 53
	movzx	eax, BYTE PTR _pos$[ebp]
	test	eax, eax
	jl	SHORT $LN3@flags_retr
	movzx	ecx, BYTE PTR _pos$[ebp]
	cmp	ecx, 7
	jle	SHORT $LN4@flags_retr
$LN3@flags_retr:
	push	53					; 00000035H
	push	OFFSET $SG5645
	push	OFFSET $SG5646
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@flags_retr:
; Line 54
	mov	BYTE PTR _value$[ebp], 0
; Line 56
	mov	al, BYTE PTR _pos$[ebp]
	mov	BYTE PTR _to_or$[ebp], al
; Line 58
	movzx	ecx, BYTE PTR _p_flag$[ebp]
	movzx	edx, BYTE PTR _to_or$[ebp]
	and	ecx, edx
	je	SHORT $LN5@flags_retr
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN6@flags_retr
$LN5@flags_retr:
	mov	DWORD PTR tv76[ebp], 0
$LN6@flags_retr:
	mov	al, BYTE PTR tv76[ebp]
	mov	BYTE PTR _value$[ebp], al
; Line 59
	mov	al, BYTE PTR _value$[ebp]
; Line 60
	mov	esp, ebp
	pop	ebp
	ret	0
_flags_retrieve_byte ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p_most_significant$ = -4				; size = 4
_p_memory$ = 8						; size = 4
_size$ = 12						; size = 4
_most_significant_byte PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\memory_routines.c
; Line 39
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 40
	cmp	DWORD PTR _p_memory$[ebp], 0
	jne	SHORT $LN3@most_signi
	push	40					; 00000028H
	push	OFFSET $SG5631
	push	OFFSET $SG5632
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@most_signi:
; Line 41
	cmp	DWORD PTR _size$[ebp], 0
	jne	SHORT $LN4@most_signi
	push	41					; 00000029H
	push	OFFSET $SG5633
	push	OFFSET $SG5634
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@most_signi:
; Line 43
	mov	DWORD PTR _p_most_significant$[ebp], 0
; Line 44
	mov	edx, DWORD PTR _p_memory$[ebp]
	mov	DWORD PTR _p_most_significant$[ebp], edx
; Line 45
	mov	eax, DWORD PTR _size$[ebp]
	mov	ecx, DWORD PTR _p_most_significant$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _p_most_significant$[ebp], edx
; Line 47
	mov	eax, DWORD PTR _p_most_significant$[ebp]
; Line 48
	mov	esp, ebp
	pop	ebp
	ret	0
_most_significant_byte ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p_least_significant$ = -4				; size = 4
_p_memory$ = 8						; size = 4
_least_significant_byte PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\memory_routines.c
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 29
	cmp	DWORD PTR _p_memory$[ebp], 0
	jne	SHORT $LN3@least_sign
	push	29					; 0000001dH
	push	OFFSET $SG5616
	push	OFFSET $SG5617
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@least_sign:
; Line 31
	mov	DWORD PTR _p_least_significant$[ebp], 0
; Line 32
	mov	ecx, DWORD PTR _p_memory$[ebp]
	mov	DWORD PTR _p_least_significant$[ebp], ecx
; Line 34
	mov	eax, DWORD PTR _p_least_significant$[ebp]
; Line 35
	mov	esp, ebp
	pop	ebp
	ret	0
_least_significant_byte ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p_buffer$ = -4						; size = 4
_p_memory$ = 8						; size = 4
_idx$ = 12						; size = 4
_val$ = 16						; size = 1
_memory_set_byte PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\memory_routines.c
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 20
	cmp	DWORD PTR _p_memory$[ebp], 0
	jne	SHORT $LN3@memory_set
	push	20					; 00000014H
	push	OFFSET $SG5605
	push	OFFSET $SG5606
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@memory_set:
; Line 22
	mov	ecx, DWORD PTR _p_memory$[ebp]
	mov	DWORD PTR _p_buffer$[ebp], ecx
; Line 23
	mov	edx, DWORD PTR _p_buffer$[ebp]
	add	edx, DWORD PTR _idx$[ebp]
	mov	al, BYTE PTR _val$[ebp]
	mov	BYTE PTR [edx], al
; Line 24
	mov	esp, ebp
	pop	ebp
	ret	0
_memory_set_byte ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p_buffer$ = -8						; size = 4
_ret_val$ = -1						; size = 1
_p_memory$ = 8						; size = 4
_idx$ = 12						; size = 4
_memory_get_byte PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\memory_routines.c
; Line 8
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 9
	cmp	DWORD PTR _p_memory$[ebp], 0
	jne	SHORT $LN3@memory_get
	push	9
	push	OFFSET $SG5591
	push	OFFSET $SG5592
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@memory_get:
; Line 11
	mov	BYTE PTR _ret_val$[ebp], 0
; Line 12
	mov	ecx, DWORD PTR _p_memory$[ebp]
	mov	DWORD PTR _p_buffer$[ebp], ecx
; Line 13
	mov	edx, DWORD PTR _p_buffer$[ebp]
	add	edx, DWORD PTR _idx$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR _ret_val$[ebp], al
; Line 14
	mov	al, BYTE PTR _ret_val$[ebp]
; Line 15
	mov	esp, ebp
	pop	ebp
	ret	0
_memory_get_byte ENDP
_TEXT	ENDS
END
