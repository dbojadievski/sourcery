; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	C:\Users\dboja\Documents\Visual Studio 2015\Projects\sourcery\Sourcery\memory_chip.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG2980	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'_', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'p', 00H, '.', 00H, 'c'
	DB	00H, 00H, 00H
$SG2981	DB	'p', 00H, '_', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'p', 00H
	DB	00H, 00H
	ORG $+2
$SG2982	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'_', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'p', 00H, '.', 00H, 'c'
	DB	00H, 00H, 00H
$SG2983	DB	'p', 00H, '_', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'p', 00H
	DB	'-', 00H, '>', 00H, 'p', 00H, '_', 00H, 's', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, 'a', 00H, 'g', 00H, 'e', 00H, 00H, 00H
$SG2992	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'_', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'p', 00H, '.', 00H, 'c'
	DB	00H, 00H, 00H
$SG2993	DB	'p', 00H, '_', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'p', 00H
	DB	00H, 00H
	ORG $+2
$SG2994	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	'_', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'p', 00H, '.', 00H, 'c'
	DB	00H, 00H, 00H
$SG2995	DB	'p', 00H, '_', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'p', 00H
	DB	'-', 00H, '>', 00H, 'p', 00H, '_', 00H, 's', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, 'a', 00H, 'g', 00H, 'e', 00H, 00H, 00H
_DATA	ENDS
PUBLIC	_memory_chip_initialize
PUBLIC	_memory_chip_is_sram
EXTRN	__wassert:PROC
EXTRN	_malloc:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv77 = -4						; size = 4
_p_chip$ = 8						; size = 4
_memory_chip_is_sram PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\memory_chip.c
; Line 30
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 31
	cmp	DWORD PTR _p_chip$[ebp], 0
	jne	SHORT $LN3@memory_chi
	push	31					; 0000001fH
	push	OFFSET $SG2992
	push	OFFSET $SG2993
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@memory_chi:
; Line 32
	mov	ecx, DWORD PTR _p_chip$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jne	SHORT $LN4@memory_chi
	push	32					; 00000020H
	push	OFFSET $SG2994
	push	OFFSET $SG2995
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@memory_chi:
; Line 34
	mov	eax, DWORD PTR _p_chip$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN5@memory_chi
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN6@memory_chi
$LN5@memory_chi:
	mov	DWORD PTR tv77[ebp], 0
$LN6@memory_chi:
	mov	al, BYTE PTR tv77[ebp]
; Line 35
	mov	esp, ebp
	pop	ebp
	ret	0
_memory_chip_is_sram ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_err_code$ = -4						; size = 4
_p_chip$ = 8						; size = 4
_refesh_rate$ = 12					; size = 4
_block_size$ = 16					; size = 1
_block_count$ = 20					; size = 4
_memory_chip_initialize PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\memory_chip.c
; Line 10
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 11
	cmp	DWORD PTR _p_chip$[ebp], 0
	jne	SHORT $LN4@memory_chi
	push	11					; 0000000bH
	push	OFFSET $SG2980
	push	OFFSET $SG2981
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@memory_chi:
; Line 13
	mov	DWORD PTR _err_code$[ebp], 0
; Line 15
	mov	ecx, DWORD PTR _p_chip$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 16
	mov	edx, DWORD PTR _p_chip$[ebp]
	mov	eax, DWORD PTR _block_count$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 17
	mov	ecx, DWORD PTR _p_chip$[ebp]
	mov	dl, BYTE PTR _block_size$[ebp]
	mov	BYTE PTR [ecx+4], dl
; Line 19
	movzx	eax, BYTE PTR _block_size$[ebp]
	imul	eax, DWORD PTR _block_count$[ebp]
	push	eax
	call	_malloc
	add	esp, 4
	mov	ecx, DWORD PTR _p_chip$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 20
	mov	edx, DWORD PTR _p_chip$[ebp]
	cmp	DWORD PTR [edx+12], 0
	jne	SHORT $LN5@memory_chi
	push	20					; 00000014H
	push	OFFSET $SG2982
	push	OFFSET $SG2983
	call	__wassert
	add	esp, 12					; 0000000cH
$LN5@memory_chi:
; Line 22
	mov	ecx, DWORD PTR _p_chip$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jne	SHORT $LN2@memory_chi
; Line 23
	mov	edx, DWORD PTR _err_code$[ebp]
	or	edx, 1
	mov	DWORD PTR _err_code$[ebp], edx
$LN2@memory_chi:
; Line 25
	mov	eax, DWORD PTR _err_code$[ebp]
; Line 26
	mov	esp, ebp
	pop	ebp
	ret	0
_memory_chip_initialize ENDP
_TEXT	ENDS
END
