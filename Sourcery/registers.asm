; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	C:\Users\dboja\Documents\Visual Studio 2015\Projects\sourcery\Sourcery\registers.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG4664	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4665	DB	'p', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG4675	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4676	DB	'0', 00H, 00H, 00H
$SG4686	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4687	DB	'0', 00H, 00H, 00H
$SG4697	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4698	DB	'0', 00H, 00H, 00H
$SG4708	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4709	DB	'0', 00H, 00H, 00H
$SG4711	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4712	DB	'0', 00H, 00H, 00H
$SG4726	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4727	DB	'p', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG4733	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4734	DB	'0', 00H, 00H, 00H
$SG4748	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4749	DB	'p', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG4755	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4756	DB	'0', 00H, 00H, 00H
$SG4778	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4779	DB	'p', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG4789	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4790	DB	'0', 00H, 00H, 00H
$SG4800	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4801	DB	'0', 00H, 00H, 00H
$SG4811	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4812	DB	'0', 00H, 00H, 00H
$SG4822	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4823	DB	'0', 00H, 00H, 00H
$SG4825	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4826	DB	'0', 00H, 00H, 00H
$SG4841	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4842	DB	'p', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H
	DB	's', 00H, 't', 00H, 'e', 00H, 'r', 00H, 's', 00H, 00H, 00H
$SG4843	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4844	DB	'(', 00H, ' ', 00H, 'p', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'g', 00H, 'i', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, 's'
	DB	00H, '-', 00H, '>', 00H, 'a', 00H, 'l', 00H, ' ', 00H, '-', 00H
	DB	' ', 00H, 'p', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '-', 00H
	DB	'>', 00H, 'a', 00H, 'h', 00H, ' ', 00H, ')', 00H, ' ', 00H, '='
	DB	00H, '=', 00H, ' ', 00H, '-', 00H, '1', 00H, 00H, 00H
$SG4845	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4846	DB	'(', 00H, ' ', 00H, 'p', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'g', 00H, 'i', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, 's'
	DB	00H, '-', 00H, '>', 00H, 'b', 00H, 'l', 00H, ' ', 00H, '-', 00H
	DB	' ', 00H, 'p', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '-', 00H
	DB	'>', 00H, 'b', 00H, 'h', 00H, ' ', 00H, ')', 00H, ' ', 00H, '='
	DB	00H, '=', 00H, ' ', 00H, '-', 00H, '1', 00H, 00H, 00H
$SG4847	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4848	DB	'(', 00H, ' ', 00H, 'p', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'g', 00H, 'i', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, 's'
	DB	00H, '-', 00H, '>', 00H, 'c', 00H, 'l', 00H, ' ', 00H, '-', 00H
	DB	' ', 00H, 'p', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '-', 00H
	DB	'>', 00H, 'c', 00H, 'h', 00H, ' ', 00H, ')', 00H, ' ', 00H, '='
	DB	00H, '=', 00H, ' ', 00H, '-', 00H, '1', 00H, 00H, 00H
$SG4849	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4850	DB	'(', 00H, ' ', 00H, 'p', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'g', 00H, 'i', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, 's'
	DB	00H, '-', 00H, '>', 00H, 'd', 00H, 'l', 00H, ' ', 00H, '-', 00H
	DB	' ', 00H, 'p', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '-', 00H
	DB	'>', 00H, 'd', 00H, 'h', 00H, ' ', 00H, ')', 00H, ' ', 00H, '='
	DB	00H, '=', 00H, ' ', 00H, '-', 00H, '1', 00H, 00H, 00H
$SG4856	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4857	DB	'p', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG4863	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4864	DB	'p', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG4870	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4871	DB	'p', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG4877	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4878	DB	'p', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG4884	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4885	DB	'p', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG4891	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4892	DB	'p', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG4898	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4899	DB	'p', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG4905	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4906	DB	'p', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG4912	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'c', 00H, 00H, 00H
$SG4913	DB	'p', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 's', 00H
	DB	00H, 00H
_DATA	ENDS
PUBLIC	_registers_mov_reg
PUBLIC	_registers_mov_value
PUBLIC	_registers_add_value
PUBLIC	_registers_add_reg
PUBLIC	_registers_initialize
PUBLIC	_registers_flags_carry_set
PUBLIC	_registers_flags_parity_set
PUBLIC	_registers_flags_af_set
PUBLIC	_registers_flags_zero_set
PUBLIC	_registers_flags_sign_set
PUBLIC	_registers_flags_single_step_set
PUBLIC	_registers_flags_interrupt_set
PUBLIC	_registers_flags_direction_set
PUBLIC	_registers_flags_overflow_set
EXTRN	__wassert:PROC
EXTRN	_least_significant_byte:PROC
EXTRN	_most_significant_byte:PROC
EXTRN	_memory_set:PROC
EXTRN	_flags_set_word:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p_regs$ = 8						; size = 4
_registers_flags_overflow_set PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\registers.c
; Line 283
	push	ebp
	mov	ebp, esp
; Line 284
	cmp	DWORD PTR _p_regs$[ebp], 0
	jne	SHORT $LN3@registers_
	push	284					; 0000011cH
	push	OFFSET $SG4912
	push	OFFSET $SG4913
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@registers_:
; Line 285
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _p_regs$[ebp]
	add	ecx, 46					; 0000002eH
	push	ecx
	call	_flags_set_word
	add	esp, 8
; Line 286
	pop	ebp
	ret	0
_registers_flags_overflow_set ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p_regs$ = 8						; size = 4
_registers_flags_direction_set PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\registers.c
; Line 276
	push	ebp
	mov	ebp, esp
; Line 277
	cmp	DWORD PTR _p_regs$[ebp], 0
	jne	SHORT $LN3@registers_
	push	277					; 00000115H
	push	OFFSET $SG4905
	push	OFFSET $SG4906
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@registers_:
; Line 278
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _p_regs$[ebp]
	add	ecx, 46					; 0000002eH
	push	ecx
	call	_flags_set_word
	add	esp, 8
; Line 279
	pop	ebp
	ret	0
_registers_flags_direction_set ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p_regs$ = 8						; size = 4
_registers_flags_interrupt_set PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\registers.c
; Line 269
	push	ebp
	mov	ebp, esp
; Line 270
	cmp	DWORD PTR _p_regs$[ebp], 0
	jne	SHORT $LN3@registers_
	push	270					; 0000010eH
	push	OFFSET $SG4898
	push	OFFSET $SG4899
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@registers_:
; Line 271
	push	9
	mov	ecx, DWORD PTR _p_regs$[ebp]
	add	ecx, 46					; 0000002eH
	push	ecx
	call	_flags_set_word
	add	esp, 8
; Line 272
	pop	ebp
	ret	0
_registers_flags_interrupt_set ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p_regs$ = 8						; size = 4
_registers_flags_single_step_set PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\registers.c
; Line 262
	push	ebp
	mov	ebp, esp
; Line 263
	cmp	DWORD PTR _p_regs$[ebp], 0
	jne	SHORT $LN3@registers_
	push	263					; 00000107H
	push	OFFSET $SG4891
	push	OFFSET $SG4892
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@registers_:
; Line 264
	push	8
	mov	ecx, DWORD PTR _p_regs$[ebp]
	add	ecx, 46					; 0000002eH
	push	ecx
	call	_flags_set_word
	add	esp, 8
; Line 265
	pop	ebp
	ret	0
_registers_flags_single_step_set ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p_regs$ = 8						; size = 4
_registers_flags_sign_set PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\registers.c
; Line 255
	push	ebp
	mov	ebp, esp
; Line 256
	cmp	DWORD PTR _p_regs$[ebp], 0
	jne	SHORT $LN3@registers_
	push	256					; 00000100H
	push	OFFSET $SG4884
	push	OFFSET $SG4885
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@registers_:
; Line 257
	push	7
	mov	ecx, DWORD PTR _p_regs$[ebp]
	add	ecx, 46					; 0000002eH
	push	ecx
	call	_flags_set_word
	add	esp, 8
; Line 258
	pop	ebp
	ret	0
_registers_flags_sign_set ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p_regs$ = 8						; size = 4
_registers_flags_zero_set PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\registers.c
; Line 248
	push	ebp
	mov	ebp, esp
; Line 249
	cmp	DWORD PTR _p_regs$[ebp], 0
	jne	SHORT $LN3@registers_
	push	249					; 000000f9H
	push	OFFSET $SG4877
	push	OFFSET $SG4878
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@registers_:
; Line 250
	push	6
	mov	ecx, DWORD PTR _p_regs$[ebp]
	add	ecx, 46					; 0000002eH
	push	ecx
	call	_flags_set_word
	add	esp, 8
; Line 251
	pop	ebp
	ret	0
_registers_flags_zero_set ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p_regs$ = 8						; size = 4
_registers_flags_af_set PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\registers.c
; Line 241
	push	ebp
	mov	ebp, esp
; Line 242
	cmp	DWORD PTR _p_regs$[ebp], 0
	jne	SHORT $LN3@registers_
	push	242					; 000000f2H
	push	OFFSET $SG4870
	push	OFFSET $SG4871
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@registers_:
; Line 243
	push	4
	mov	ecx, DWORD PTR _p_regs$[ebp]
	add	ecx, 46					; 0000002eH
	push	ecx
	call	_flags_set_word
	add	esp, 8
; Line 244
	pop	ebp
	ret	0
_registers_flags_af_set ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p_regs$ = 8						; size = 4
_registers_flags_parity_set PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\registers.c
; Line 234
	push	ebp
	mov	ebp, esp
; Line 235
	cmp	DWORD PTR _p_regs$[ebp], 0
	jne	SHORT $LN3@registers_
	push	235					; 000000ebH
	push	OFFSET $SG4863
	push	OFFSET $SG4864
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@registers_:
; Line 236
	push	2
	mov	ecx, DWORD PTR _p_regs$[ebp]
	add	ecx, 46					; 0000002eH
	push	ecx
	call	_flags_set_word
	add	esp, 8
; Line 237
	pop	ebp
	ret	0
_registers_flags_parity_set ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p_regs$ = 8						; size = 4
_registers_flags_carry_set PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\registers.c
; Line 227
	push	ebp
	mov	ebp, esp
; Line 228
	cmp	DWORD PTR _p_regs$[ebp], 0
	jne	SHORT $LN3@registers_
	push	228					; 000000e4H
	push	OFFSET $SG4856
	push	OFFSET $SG4857
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@registers_:
; Line 229
	push	0
	mov	ecx, DWORD PTR _p_regs$[ebp]
	add	ecx, 46					; 0000002eH
	push	ecx
	call	_flags_set_word
	add	esp, 8
; Line 230
	pop	ebp
	ret	0
_registers_flags_carry_set ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_size$ = -4						; size = 4
_p_registers$ = 8					; size = 4
_registers_initialize PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\registers.c
; Line 181
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 183
	cmp	DWORD PTR _p_registers$[ebp], 0
	jne	SHORT $LN3@registers_
	push	183					; 000000b7H
	push	OFFSET $SG4841
	push	OFFSET $SG4842
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@registers_:
; Line 185
	mov	DWORD PTR _size$[ebp], 48		; 00000030H
; Line 187
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _p_registers$[ebp]
	push	edx
	call	_memory_set
	add	esp, 12					; 0000000cH
; Line 191
	push	2
	mov	eax, DWORD PTR _p_registers$[ebp]
	push	eax
	call	_most_significant_byte
	add	esp, 8
	mov	ecx, DWORD PTR _p_registers$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 193
	mov	edx, DWORD PTR _p_registers$[ebp]
	push	edx
	call	_least_significant_byte
	add	esp, 4
	mov	ecx, DWORD PTR _p_registers$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 195
	mov	edx, DWORD PTR _p_registers$[ebp]
	mov	eax, DWORD PTR _p_registers$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+8]
	cmp	ecx, -1
	je	SHORT $LN4@registers_
	push	195					; 000000c3H
	push	OFFSET $SG4843
	push	OFFSET $SG4844
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@registers_:
; Line 199
	push	2
	mov	eax, DWORD PTR _p_registers$[ebp]
	add	eax, 2
	push	eax
	call	_most_significant_byte
	add	esp, 8
	mov	ecx, DWORD PTR _p_registers$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 201
	mov	edx, DWORD PTR _p_registers$[ebp]
	add	edx, 2
	push	edx
	call	_least_significant_byte
	add	esp, 4
	mov	ecx, DWORD PTR _p_registers$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 203
	mov	edx, DWORD PTR _p_registers$[ebp]
	mov	eax, DWORD PTR _p_registers$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	sub	ecx, DWORD PTR [eax+16]
	cmp	ecx, -1
	je	SHORT $LN5@registers_
	push	203					; 000000cbH
	push	OFFSET $SG4845
	push	OFFSET $SG4846
	call	__wassert
	add	esp, 12					; 0000000cH
$LN5@registers_:
; Line 207
	push	2
	mov	eax, DWORD PTR _p_registers$[ebp]
	add	eax, 4
	push	eax
	call	_most_significant_byte
	add	esp, 8
	mov	ecx, DWORD PTR _p_registers$[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 209
	mov	edx, DWORD PTR _p_registers$[ebp]
	add	edx, 4
	push	edx
	call	_least_significant_byte
	add	esp, 4
	mov	ecx, DWORD PTR _p_registers$[ebp]
	mov	DWORD PTR [ecx+28], eax
; Line 211
	mov	edx, DWORD PTR _p_registers$[ebp]
	mov	eax, DWORD PTR _p_registers$[ebp]
	mov	ecx, DWORD PTR [edx+28]
	sub	ecx, DWORD PTR [eax+24]
	cmp	ecx, -1
	je	SHORT $LN6@registers_
	push	211					; 000000d3H
	push	OFFSET $SG4847
	push	OFFSET $SG4848
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@registers_:
; Line 213
	push	2
	mov	eax, DWORD PTR _p_registers$[ebp]
	add	eax, 6
	push	eax
	call	_most_significant_byte
	add	esp, 8
	mov	ecx, DWORD PTR _p_registers$[ebp]
	mov	DWORD PTR [ecx+32], eax
; Line 215
	mov	edx, DWORD PTR _p_registers$[ebp]
	add	edx, 6
	push	edx
	call	_least_significant_byte
	add	esp, 4
	mov	ecx, DWORD PTR _p_registers$[ebp]
	mov	DWORD PTR [ecx+36], eax
; Line 217
	mov	edx, DWORD PTR _p_registers$[ebp]
	mov	eax, DWORD PTR _p_registers$[ebp]
	mov	ecx, DWORD PTR [edx+36]
	sub	ecx, DWORD PTR [eax+32]
	cmp	ecx, -1
	je	SHORT $LN1@registers_
	push	217					; 000000d9H
	push	OFFSET $SG4849
	push	OFFSET $SG4850
	call	__wassert
	add	esp, 12					; 0000000cH
$LN1@registers_:
; Line 223
	mov	esp, ebp
	pop	ebp
	ret	0
_registers_initialize ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv70 = -4						; size = 4
_p_regs$ = 8						; size = 4
_reg_dest$ = 12						; size = 2
_reg_source$ = 16					; size = 2
_registers_add_reg PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\registers.c
; Line 118
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 120
	cmp	DWORD PTR _p_regs$[ebp], 0
	jne	SHORT $LN42@registers_
	push	120					; 00000078H
	push	OFFSET $SG4778
	push	OFFSET $SG4779
	call	__wassert
	add	esp, 12					; 0000000cH
$LN42@registers_:
; Line 121
	movzx	ecx, WORD PTR _reg_dest$[ebp]
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR tv70[ebp]
	sub	edx, 1
	mov	DWORD PTR tv70[ebp], edx
	cmp	DWORD PTR tv70[ebp], 3
	ja	$LN40@registers_
	mov	eax, DWORD PTR tv70[ebp]
	jmp	DWORD PTR $LN48@registers_[eax*4]
$LN4@registers_:
; Line 124
	movzx	ecx, WORD PTR _reg_source$[ebp]
	cmp	ecx, 1
	jne	SHORT $LN5@registers_
; Line 125
	mov	edx, DWORD PTR _p_regs$[ebp]
	movzx	eax, WORD PTR [edx]
	mov	ecx, DWORD PTR _p_regs$[ebp]
	movzx	edx, WORD PTR [ecx]
	add	edx, eax
	mov	eax, DWORD PTR _p_regs$[ebp]
	mov	WORD PTR [eax], dx
	jmp	SHORT $LN6@registers_
$LN5@registers_:
; Line 126
	movzx	ecx, WORD PTR _reg_source$[ebp]
	cmp	ecx, 2
	jne	SHORT $LN7@registers_
; Line 127
	mov	edx, DWORD PTR _p_regs$[ebp]
	movzx	eax, WORD PTR [edx+2]
	mov	ecx, DWORD PTR _p_regs$[ebp]
	movzx	edx, WORD PTR [ecx]
	add	edx, eax
	mov	eax, DWORD PTR _p_regs$[ebp]
	mov	WORD PTR [eax], dx
	jmp	SHORT $LN6@registers_
$LN7@registers_:
; Line 128
	movzx	ecx, WORD PTR _reg_source$[ebp]
	cmp	ecx, 3
	jne	SHORT $LN9@registers_
; Line 129
	mov	edx, DWORD PTR _p_regs$[ebp]
	movzx	eax, WORD PTR [edx+4]
	mov	ecx, DWORD PTR _p_regs$[ebp]
	movzx	edx, WORD PTR [ecx]
	add	edx, eax
	mov	eax, DWORD PTR _p_regs$[ebp]
	mov	WORD PTR [eax], dx
	jmp	SHORT $LN6@registers_
$LN9@registers_:
; Line 130
	movzx	ecx, WORD PTR _reg_source$[ebp]
	cmp	ecx, 4
	jne	SHORT $LN11@registers_
; Line 131
	mov	edx, DWORD PTR _p_regs$[ebp]
	movzx	eax, WORD PTR [edx+6]
	mov	ecx, DWORD PTR _p_regs$[ebp]
	movzx	edx, WORD PTR [ecx]
	add	edx, eax
	mov	eax, DWORD PTR _p_regs$[ebp]
	mov	WORD PTR [eax], dx
	jmp	SHORT $LN6@registers_
$LN11@registers_:
; Line 133
	xor	ecx, ecx
	jne	SHORT $LN6@registers_
	push	133					; 00000085H
	push	OFFSET $SG4789
	push	OFFSET $SG4790
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@registers_:
; Line 134
	jmp	$LN1@registers_
$LN13@registers_:
; Line 136
	movzx	eax, WORD PTR _reg_source$[ebp]
	cmp	eax, 1
	jne	SHORT $LN14@registers_
; Line 137
	mov	ecx, DWORD PTR _p_regs$[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	eax, DWORD PTR _p_regs$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	add	ecx, edx
	mov	edx, DWORD PTR _p_regs$[ebp]
	mov	WORD PTR [edx+2], cx
	jmp	$LN15@registers_
$LN14@registers_:
; Line 138
	movzx	eax, WORD PTR _reg_source$[ebp]
	cmp	eax, 2
	jne	SHORT $LN16@registers_
; Line 139
	mov	ecx, DWORD PTR _p_regs$[ebp]
	movzx	edx, WORD PTR [ecx+2]
	mov	eax, DWORD PTR _p_regs$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	add	ecx, edx
	mov	edx, DWORD PTR _p_regs$[ebp]
	mov	WORD PTR [edx+2], cx
	jmp	SHORT $LN15@registers_
$LN16@registers_:
; Line 140
	movzx	eax, WORD PTR _reg_source$[ebp]
	cmp	eax, 3
	jne	SHORT $LN18@registers_
; Line 141
	mov	ecx, DWORD PTR _p_regs$[ebp]
	movzx	edx, WORD PTR [ecx+4]
	mov	eax, DWORD PTR _p_regs$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	add	ecx, edx
	mov	edx, DWORD PTR _p_regs$[ebp]
	mov	WORD PTR [edx+2], cx
	jmp	SHORT $LN15@registers_
$LN18@registers_:
; Line 142
	movzx	eax, WORD PTR _reg_source$[ebp]
	cmp	eax, 4
	jne	SHORT $LN20@registers_
; Line 143
	mov	ecx, DWORD PTR _p_regs$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	mov	eax, DWORD PTR _p_regs$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	add	ecx, edx
	mov	edx, DWORD PTR _p_regs$[ebp]
	mov	WORD PTR [edx+2], cx
	jmp	SHORT $LN15@registers_
$LN20@registers_:
; Line 145
	xor	eax, eax
	jne	SHORT $LN15@registers_
	push	145					; 00000091H
	push	OFFSET $SG4800
	push	OFFSET $SG4801
	call	__wassert
	add	esp, 12					; 0000000cH
$LN15@registers_:
; Line 146
	jmp	$LN1@registers_
$LN22@registers_:
; Line 148
	movzx	edx, WORD PTR _reg_source$[ebp]
	cmp	edx, 1
	jne	SHORT $LN23@registers_
; Line 149
	mov	eax, DWORD PTR _p_regs$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _p_regs$[ebp]
	movzx	eax, WORD PTR [edx+4]
	add	eax, ecx
	mov	ecx, DWORD PTR _p_regs$[ebp]
	mov	WORD PTR [ecx+4], ax
	jmp	$LN24@registers_
$LN23@registers_:
; Line 150
	movzx	edx, WORD PTR _reg_source$[ebp]
	cmp	edx, 2
	jne	SHORT $LN25@registers_
; Line 151
	mov	eax, DWORD PTR _p_regs$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	mov	edx, DWORD PTR _p_regs$[ebp]
	movzx	eax, WORD PTR [edx+4]
	add	eax, ecx
	mov	ecx, DWORD PTR _p_regs$[ebp]
	mov	WORD PTR [ecx+4], ax
	jmp	SHORT $LN24@registers_
$LN25@registers_:
; Line 152
	movzx	edx, WORD PTR _reg_source$[ebp]
	cmp	edx, 3
	jne	SHORT $LN27@registers_
; Line 153
	mov	eax, DWORD PTR _p_regs$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	mov	edx, DWORD PTR _p_regs$[ebp]
	movzx	eax, WORD PTR [edx+4]
	add	eax, ecx
	mov	ecx, DWORD PTR _p_regs$[ebp]
	mov	WORD PTR [ecx+4], ax
	jmp	SHORT $LN24@registers_
$LN27@registers_:
; Line 154
	movzx	edx, WORD PTR _reg_source$[ebp]
	cmp	edx, 4
	jne	SHORT $LN29@registers_
; Line 155
	mov	eax, DWORD PTR _p_regs$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	mov	edx, DWORD PTR _p_regs$[ebp]
	movzx	eax, WORD PTR [edx+4]
	add	eax, ecx
	mov	ecx, DWORD PTR _p_regs$[ebp]
	mov	WORD PTR [ecx+4], ax
	jmp	SHORT $LN24@registers_
$LN29@registers_:
; Line 157
	xor	edx, edx
	jne	SHORT $LN24@registers_
	push	157					; 0000009dH
	push	OFFSET $SG4811
	push	OFFSET $SG4812
	call	__wassert
	add	esp, 12					; 0000000cH
$LN24@registers_:
; Line 158
	jmp	$LN1@registers_
$LN31@registers_:
; Line 160
	movzx	ecx, WORD PTR _reg_source$[ebp]
	cmp	ecx, 1
	jne	SHORT $LN32@registers_
; Line 161
	mov	edx, DWORD PTR _p_regs$[ebp]
	movzx	eax, WORD PTR [edx]
	mov	ecx, DWORD PTR _p_regs$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	add	edx, eax
	mov	eax, DWORD PTR _p_regs$[ebp]
	mov	WORD PTR [eax+6], dx
	jmp	$LN33@registers_
$LN32@registers_:
; Line 162
	movzx	ecx, WORD PTR _reg_source$[ebp]
	cmp	ecx, 2
	jne	SHORT $LN34@registers_
; Line 163
	mov	edx, DWORD PTR _p_regs$[ebp]
	movzx	eax, WORD PTR [edx+2]
	mov	ecx, DWORD PTR _p_regs$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	add	edx, eax
	mov	eax, DWORD PTR _p_regs$[ebp]
	mov	WORD PTR [eax+6], dx
	jmp	SHORT $LN33@registers_
$LN34@registers_:
; Line 164
	movzx	ecx, WORD PTR _reg_source$[ebp]
	cmp	ecx, 3
	jne	SHORT $LN36@registers_
; Line 165
	mov	edx, DWORD PTR _p_regs$[ebp]
	movzx	eax, WORD PTR [edx+4]
	mov	ecx, DWORD PTR _p_regs$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	add	edx, eax
	mov	eax, DWORD PTR _p_regs$[ebp]
	mov	WORD PTR [eax+6], dx
	jmp	SHORT $LN33@registers_
$LN36@registers_:
; Line 166
	movzx	ecx, WORD PTR _reg_source$[ebp]
	cmp	ecx, 4
	jne	SHORT $LN38@registers_
; Line 167
	mov	edx, DWORD PTR _p_regs$[ebp]
	movzx	eax, WORD PTR [edx+6]
	mov	ecx, DWORD PTR _p_regs$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	add	edx, eax
	mov	eax, DWORD PTR _p_regs$[ebp]
	mov	WORD PTR [eax+6], dx
	jmp	SHORT $LN33@registers_
$LN38@registers_:
; Line 169
	xor	ecx, ecx
	jne	SHORT $LN33@registers_
	push	169					; 000000a9H
	push	OFFSET $SG4822
	push	OFFSET $SG4823
	call	__wassert
	add	esp, 12					; 0000000cH
$LN33@registers_:
; Line 170
	jmp	SHORT $LN1@registers_
$LN40@registers_:
; Line 172
	xor	eax, eax
	jne	SHORT $LN1@registers_
	push	172					; 000000acH
	push	OFFSET $SG4825
	push	OFFSET $SG4826
	call	__wassert
	add	esp, 12					; 0000000cH
$LN1@registers_:
; Line 175
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN48@registers_:
	DD	$LN4@registers_
	DD	$LN13@registers_
	DD	$LN22@registers_
	DD	$LN31@registers_
_registers_add_reg ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv70 = -4						; size = 4
_p_regs$ = 8						; size = 4
_reg$ = 12						; size = 2
_value$ = 16						; size = 2
_registers_add_value PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\registers.c
; Line 93
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 95
	cmp	DWORD PTR _p_regs$[ebp], 0
	jne	SHORT $LN10@registers_
	push	95					; 0000005fH
	push	OFFSET $SG4748
	push	OFFSET $SG4749
	call	__wassert
	add	esp, 12					; 0000000cH
$LN10@registers_:
; Line 96
	movzx	ecx, WORD PTR _reg$[ebp]
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR tv70[ebp]
	sub	edx, 1
	mov	DWORD PTR tv70[ebp], edx
	cmp	DWORD PTR tv70[ebp], 3
	ja	SHORT $LN8@registers_
	mov	eax, DWORD PTR tv70[ebp]
	jmp	DWORD PTR $LN12@registers_[eax*4]
$LN4@registers_:
; Line 99
	movzx	ecx, WORD PTR _value$[ebp]
	mov	edx, DWORD PTR _p_regs$[ebp]
	movzx	eax, WORD PTR [edx]
	add	eax, ecx
	mov	ecx, DWORD PTR _p_regs$[ebp]
	mov	WORD PTR [ecx], ax
; Line 100
	jmp	SHORT $LN1@registers_
$LN5@registers_:
; Line 102
	movzx	edx, WORD PTR _value$[ebp]
	mov	eax, DWORD PTR _p_regs$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	add	ecx, edx
	mov	edx, DWORD PTR _p_regs$[ebp]
	mov	WORD PTR [edx+2], cx
; Line 103
	jmp	SHORT $LN1@registers_
$LN6@registers_:
; Line 105
	movzx	eax, WORD PTR _value$[ebp]
	mov	ecx, DWORD PTR _p_regs$[ebp]
	movzx	edx, WORD PTR [ecx+4]
	add	edx, eax
	mov	eax, DWORD PTR _p_regs$[ebp]
	mov	WORD PTR [eax+4], dx
; Line 106
	jmp	SHORT $LN1@registers_
$LN7@registers_:
; Line 108
	movzx	ecx, WORD PTR _value$[ebp]
	mov	edx, DWORD PTR _p_regs$[ebp]
	movzx	eax, WORD PTR [edx+6]
	add	eax, ecx
	mov	ecx, DWORD PTR _p_regs$[ebp]
	mov	WORD PTR [ecx+6], ax
; Line 109
	jmp	SHORT $LN1@registers_
$LN8@registers_:
; Line 111
	xor	edx, edx
	jne	SHORT $LN1@registers_
	push	111					; 0000006fH
	push	OFFSET $SG4755
	push	OFFSET $SG4756
	call	__wassert
	add	esp, 12					; 0000000cH
$LN1@registers_:
; Line 113
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@registers_:
	DD	$LN4@registers_
	DD	$LN5@registers_
	DD	$LN6@registers_
	DD	$LN7@registers_
_registers_add_value ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv70 = -4						; size = 4
_p_regs$ = 8						; size = 4
_reg$ = 12						; size = 2
_val$ = 16						; size = 2
_registers_mov_value PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\registers.c
; Line 69
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 70
	cmp	DWORD PTR _p_regs$[ebp], 0
	jne	SHORT $LN10@registers_
	push	70					; 00000046H
	push	OFFSET $SG4726
	push	OFFSET $SG4727
	call	__wassert
	add	esp, 12					; 0000000cH
$LN10@registers_:
; Line 72
	movzx	ecx, WORD PTR _reg$[ebp]
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR tv70[ebp]
	sub	edx, 1
	mov	DWORD PTR tv70[ebp], edx
	cmp	DWORD PTR tv70[ebp], 3
	ja	SHORT $LN8@registers_
	mov	eax, DWORD PTR tv70[ebp]
	jmp	DWORD PTR $LN12@registers_[eax*4]
$LN4@registers_:
; Line 75
	mov	ecx, DWORD PTR _p_regs$[ebp]
	mov	dx, WORD PTR _val$[ebp]
	mov	WORD PTR [ecx], dx
; Line 76
	jmp	SHORT $LN1@registers_
$LN5@registers_:
; Line 78
	mov	eax, DWORD PTR _p_regs$[ebp]
	mov	cx, WORD PTR _val$[ebp]
	mov	WORD PTR [eax+2], cx
; Line 79
	jmp	SHORT $LN1@registers_
$LN6@registers_:
; Line 81
	mov	edx, DWORD PTR _p_regs$[ebp]
	mov	ax, WORD PTR _val$[ebp]
	mov	WORD PTR [edx+4], ax
; Line 82
	jmp	SHORT $LN1@registers_
$LN7@registers_:
; Line 84
	mov	ecx, DWORD PTR _p_regs$[ebp]
	mov	dx, WORD PTR _val$[ebp]
	mov	WORD PTR [ecx+6], dx
; Line 85
	jmp	SHORT $LN1@registers_
$LN8@registers_:
; Line 87
	xor	eax, eax
	jne	SHORT $LN1@registers_
	push	87					; 00000057H
	push	OFFSET $SG4733
	push	OFFSET $SG4734
	call	__wassert
	add	esp, 12					; 0000000cH
$LN1@registers_:
; Line 89
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN12@registers_:
	DD	$LN4@registers_
	DD	$LN5@registers_
	DD	$LN6@registers_
	DD	$LN7@registers_
_registers_mov_value ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv70 = -4						; size = 4
_p_regs$ = 8						; size = 4
_reg_dest$ = 12						; size = 2
_reg_source$ = 16					; size = 2
_registers_mov_reg PROC
; File c:\users\dboja\documents\visual studio 2015\projects\sourcery\sourcery\registers.c
; Line 8
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 9
	cmp	DWORD PTR _p_regs$[ebp], 0
	jne	SHORT $LN42@registers_
	push	9
	push	OFFSET $SG4664
	push	OFFSET $SG4665
	call	__wassert
	add	esp, 12					; 0000000cH
$LN42@registers_:
; Line 10
	movzx	ecx, WORD PTR _reg_dest$[ebp]
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR tv70[ebp]
	sub	edx, 1
	mov	DWORD PTR tv70[ebp], edx
	cmp	DWORD PTR tv70[ebp], 3
	ja	$LN40@registers_
	mov	eax, DWORD PTR tv70[ebp]
	jmp	DWORD PTR $LN48@registers_[eax*4]
$LN4@registers_:
; Line 13
	movzx	ecx, WORD PTR _reg_source$[ebp]
	cmp	ecx, 1
	jne	SHORT $LN5@registers_
; Line 14
	mov	edx, DWORD PTR _p_regs$[ebp]
	mov	eax, DWORD PTR _p_regs$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR [edx], cx
	jmp	SHORT $LN6@registers_
$LN5@registers_:
; Line 15
	movzx	edx, WORD PTR _reg_source$[ebp]
	cmp	edx, 2
	jne	SHORT $LN7@registers_
; Line 16
	mov	eax, DWORD PTR _p_regs$[ebp]
	mov	ecx, DWORD PTR _p_regs$[ebp]
	mov	dx, WORD PTR [ecx+2]
	mov	WORD PTR [eax], dx
	jmp	SHORT $LN6@registers_
$LN7@registers_:
; Line 17
	movzx	eax, WORD PTR _reg_source$[ebp]
	cmp	eax, 3
	jne	SHORT $LN9@registers_
; Line 18
	mov	ecx, DWORD PTR _p_regs$[ebp]
	mov	edx, DWORD PTR _p_regs$[ebp]
	mov	ax, WORD PTR [edx+4]
	mov	WORD PTR [ecx], ax
	jmp	SHORT $LN6@registers_
$LN9@registers_:
; Line 19
	movzx	ecx, WORD PTR _reg_source$[ebp]
	cmp	ecx, 4
	jne	SHORT $LN11@registers_
; Line 20
	mov	edx, DWORD PTR _p_regs$[ebp]
	mov	eax, DWORD PTR _p_regs$[ebp]
	mov	cx, WORD PTR [eax+6]
	mov	WORD PTR [edx], cx
	jmp	SHORT $LN6@registers_
$LN11@registers_:
; Line 22
	xor	edx, edx
	jne	SHORT $LN6@registers_
	push	22					; 00000016H
	push	OFFSET $SG4675
	push	OFFSET $SG4676
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@registers_:
; Line 23
	jmp	$LN1@registers_
$LN13@registers_:
; Line 25
	movzx	ecx, WORD PTR _reg_source$[ebp]
	cmp	ecx, 1
	jne	SHORT $LN14@registers_
; Line 26
	mov	edx, DWORD PTR _p_regs$[ebp]
	mov	eax, DWORD PTR _p_regs$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR [edx+2], cx
	jmp	SHORT $LN15@registers_
$LN14@registers_:
; Line 27
	movzx	edx, WORD PTR _reg_source$[ebp]
	cmp	edx, 2
	jne	SHORT $LN16@registers_
; Line 28
	mov	eax, DWORD PTR _p_regs$[ebp]
	mov	ecx, DWORD PTR _p_regs$[ebp]
	mov	dx, WORD PTR [ecx+2]
	mov	WORD PTR [eax+2], dx
	jmp	SHORT $LN15@registers_
$LN16@registers_:
; Line 29
	movzx	eax, WORD PTR _reg_source$[ebp]
	cmp	eax, 3
	jne	SHORT $LN18@registers_
; Line 30
	mov	ecx, DWORD PTR _p_regs$[ebp]
	mov	edx, DWORD PTR _p_regs$[ebp]
	mov	ax, WORD PTR [edx+4]
	mov	WORD PTR [ecx+2], ax
	jmp	SHORT $LN15@registers_
$LN18@registers_:
; Line 31
	movzx	ecx, WORD PTR _reg_source$[ebp]
	cmp	ecx, 4
	jne	SHORT $LN20@registers_
; Line 32
	mov	edx, DWORD PTR _p_regs$[ebp]
	mov	eax, DWORD PTR _p_regs$[ebp]
	mov	cx, WORD PTR [eax+6]
	mov	WORD PTR [edx+2], cx
	jmp	SHORT $LN15@registers_
$LN20@registers_:
; Line 34
	xor	edx, edx
	jne	SHORT $LN15@registers_
	push	34					; 00000022H
	push	OFFSET $SG4686
	push	OFFSET $SG4687
	call	__wassert
	add	esp, 12					; 0000000cH
$LN15@registers_:
; Line 35
	jmp	$LN1@registers_
$LN22@registers_:
; Line 37
	movzx	ecx, WORD PTR _reg_source$[ebp]
	cmp	ecx, 1
	jne	SHORT $LN23@registers_
; Line 38
	mov	edx, DWORD PTR _p_regs$[ebp]
	mov	eax, DWORD PTR _p_regs$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR [edx+4], cx
	jmp	SHORT $LN24@registers_
$LN23@registers_:
; Line 39
	movzx	edx, WORD PTR _reg_source$[ebp]
	cmp	edx, 2
	jne	SHORT $LN25@registers_
; Line 40
	mov	eax, DWORD PTR _p_regs$[ebp]
	mov	ecx, DWORD PTR _p_regs$[ebp]
	mov	dx, WORD PTR [ecx+2]
	mov	WORD PTR [eax+4], dx
	jmp	SHORT $LN24@registers_
$LN25@registers_:
; Line 41
	movzx	eax, WORD PTR _reg_source$[ebp]
	cmp	eax, 3
	jne	SHORT $LN27@registers_
; Line 42
	mov	ecx, DWORD PTR _p_regs$[ebp]
	mov	edx, DWORD PTR _p_regs$[ebp]
	mov	ax, WORD PTR [edx+4]
	mov	WORD PTR [ecx+4], ax
	jmp	SHORT $LN24@registers_
$LN27@registers_:
; Line 43
	movzx	ecx, WORD PTR _reg_source$[ebp]
	cmp	ecx, 4
	jne	SHORT $LN29@registers_
; Line 44
	mov	edx, DWORD PTR _p_regs$[ebp]
	mov	eax, DWORD PTR _p_regs$[ebp]
	mov	cx, WORD PTR [eax+6]
	mov	WORD PTR [edx+4], cx
	jmp	SHORT $LN24@registers_
$LN29@registers_:
; Line 46
	xor	edx, edx
	jne	SHORT $LN24@registers_
	push	46					; 0000002eH
	push	OFFSET $SG4697
	push	OFFSET $SG4698
	call	__wassert
	add	esp, 12					; 0000000cH
$LN24@registers_:
; Line 47
	jmp	$LN1@registers_
$LN31@registers_:
; Line 49
	movzx	ecx, WORD PTR _reg_source$[ebp]
	cmp	ecx, 1
	jne	SHORT $LN32@registers_
; Line 50
	mov	edx, DWORD PTR _p_regs$[ebp]
	mov	eax, DWORD PTR _p_regs$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR [edx+6], cx
	jmp	SHORT $LN33@registers_
$LN32@registers_:
; Line 51
	movzx	edx, WORD PTR _reg_source$[ebp]
	cmp	edx, 2
	jne	SHORT $LN34@registers_
; Line 52
	mov	eax, DWORD PTR _p_regs$[ebp]
	mov	ecx, DWORD PTR _p_regs$[ebp]
	mov	dx, WORD PTR [ecx+2]
	mov	WORD PTR [eax+6], dx
	jmp	SHORT $LN33@registers_
$LN34@registers_:
; Line 53
	movzx	eax, WORD PTR _reg_source$[ebp]
	cmp	eax, 3
	jne	SHORT $LN36@registers_
; Line 54
	mov	ecx, DWORD PTR _p_regs$[ebp]
	mov	edx, DWORD PTR _p_regs$[ebp]
	mov	ax, WORD PTR [edx+4]
	mov	WORD PTR [ecx+6], ax
	jmp	SHORT $LN33@registers_
$LN36@registers_:
; Line 55
	movzx	ecx, WORD PTR _reg_source$[ebp]
	cmp	ecx, 4
	jne	SHORT $LN38@registers_
; Line 56
	mov	edx, DWORD PTR _p_regs$[ebp]
	mov	eax, DWORD PTR _p_regs$[ebp]
	mov	cx, WORD PTR [eax+6]
	mov	WORD PTR [edx+6], cx
	jmp	SHORT $LN33@registers_
$LN38@registers_:
; Line 58
	xor	edx, edx
	jne	SHORT $LN33@registers_
	push	58					; 0000003aH
	push	OFFSET $SG4708
	push	OFFSET $SG4709
	call	__wassert
	add	esp, 12					; 0000000cH
$LN33@registers_:
; Line 59
	jmp	SHORT $LN1@registers_
$LN40@registers_:
; Line 61
	xor	ecx, ecx
	jne	SHORT $LN1@registers_
	push	61					; 0000003dH
	push	OFFSET $SG4711
	push	OFFSET $SG4712
	call	__wassert
	add	esp, 12					; 0000000cH
$LN1@registers_:
; Line 64
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN48@registers_:
	DD	$LN4@registers_
	DD	$LN13@registers_
	DD	$LN22@registers_
	DD	$LN31@registers_
_registers_mov_reg ENDP
_TEXT	ENDS
END
